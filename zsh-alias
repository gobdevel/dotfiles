# TMUX RELATED
alias tmux="env TERM=screen-256color tmux"
alias tnew="tmux new -s "
alias ta="tmux attach-session -t "
alias tls="tmux ls"

# Git Related
alias gla="git log --oneline --all --decorate --graph"
alias glg="git log --oneline --decorate --graph"
alias glo="git log --oneline"
alias gs="git status "
alias gd="git diff "
alias gds="git diff --staged"
alias gcb="git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d"
alias gch="git checkout -b "


# Find related
alias pfind='find . -name "*.py" | xargs grep --color -i '
alias tfind='find . -name "*.tac" | xargs grep --color -i '
alias cfind='find . -name "*.cpp" | xargs grep --color -i '
alias hfind='find . -name "*.h" | xargs grep --color -i '

# Docker related
alias dp='docker ps'
alias dpa='docker ps -a'

# Python Related
alias venv='python3 -m .venv '
alias venva='source .venv/bin/activate'
alias venvd='deactivate'

# Apstra
alias scli_update='docker pull docker-registry:5000/slicercli:latest'
alias scli='docker run --rm -i -t -v $HOME/.slicerconfig:/root/.slicerconfig  -v $HOME/slicer_topo:/project docker-registry:5000/slicercli /usr/local/bin/slicercli -i'
alias lsdev='docker ps -a | grep aos-dev | awk "{print \$(NF)}"'

NVIM_CONFIG=$HOME/.config/nvim-chad
# alias vim='XDG_DATA_HOME=$NVIM_CONFIG/share XDG_CONFIG_HOME=$NVIM_CONFIG nvim'

# CMAKE
alias cmaked='cmake -DCMAKE_BUILD_TYPE=Debug '
alias cmaker='cmake -DCMAKE_BUILD_TYPE=Release '

# Server
alias dev='ssh gobindp@gobindp.dev.dc1.apstra.com'
alias dev2='ssh gobindp@10.24.128.76'
alias ubuntu='ssh gobind@localhost -p 2222'

#function lsdev() {
#	docker ps -a | grep aos-dev | awk '{print $(NF)}'
#}

# Docker function
function start_dev {
  curr_dir=$(basename $(pwd))
  parent_dir="$(dirname $(pwd))"
  parent_dir=$(basename "$parent_dir")
  if [ "$curr_dir" != "leblon" -a "$curr_dir" != "aos" ]; then
    echo "Must run from leblon or aos directory"
    return 1
  fi

  if [[ $# -eq 1 ]]; then
    parent_dir="$1"
  fi
  ./tools/start_aos_dev_container -n $parent_dir
}

function start_dev_local {
  curr_dir=$(basename $(pwd))
  if [ "$curr_dir" != "leblon" -a "$curr_dir" != "aos" ]; then
    echo "Must run from leblon or aos directory"
    return 1
  fi

  if [[ $# -ne 2 ]]; then
    echo "Usage start_dev <name> <image:tag>"
    return 1
  else
    ./tools/start_aos_dev_container --docker-run-options="-v $HOME/work/tacc_bootcamp:/bootcamp" -n $1 --docker-image="$2"
  fi
}

function re_cont {
  curr_dir=$(basename $(pwd))
  if [ "$curr_dir" != "leblon" -a "$curr_dir" != "aos" ]; then
    echo "Must run from leblon or aos directory"
    return 1
  fi

  container_name=$(basename "$(dirname "$(pwd)")")
  docker rm "$container_name"
  start_dev "$container_name"
}

function start_ubuntu {
  container_name="ubuntu-vm"
  image="gob/ubuntu:1"
  docker stop "$container_name" 2>/dev/null
  docker rm "$container_name" 2>/dev/null
  docker run -d -p 2222:22 --mount source=ubuntu-data,target=/home -v /var/run/docker.sock:/var/run/docker.sock --hostname ${container_name} --name ${container_name} ${image}
}
